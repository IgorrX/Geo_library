namespace Geo_library
{
    public class Geometry
    {
        public string? info; //для возврата доп.информации
        public double area(uint type, double[] data) //тип фигуры, массив с размерами
        {
            double s = -1, pp, pi = Math.PI, a, b, c;
            int dl = data.Length; //определим длину массива, чтобы избежать адресации за его пределы
            info = null;
            switch (type)
            {
                case 0: //окружность, data[0]-радиус
                    if (dl >= 1)
                    {
                        if (data[0] >= 0) s = pi * data[0] * data[0];//проверка радиуса на неотрицательность
                        else info = "радиус < 0";
                    }
                    else info = "пустой массив с данными";
                    break;

                case 1:  //треугольник,data [0..2] -длины сторон для расчета по формуле Герона
                    if (dl >= 3)
                    {
                        a = data[0]; b = data[1]; c = data[2];
                        if (a >= 0 && b >= 0 && c >= 0) //проверка длинн сторон на неотрицательность, ноль оставим-это может считаться вырожденным треугольником
                        {
                            pp = 0.5 * (a + b + c); //полупериметр
                            pp *= (pp - a) * (pp - b) * (pp - c);
                            if (pp >= 0) //проверка на существование треуголька с заданными сторонами
                            {
                                s = Math.Sqrt(pp);
                                //Array.Sort(data, 0, 3);   //сортировка по возрастанию
                                //if (data[0] * data[1] == 2 * s && s!=0) info = "треугольник прямоугольный";
                                if (a > b) (a, b) = (b, a);
                                if (b > c) { (b, c) = (c, b); if (a > b) (a, b) = (b, a); }
                                if (a * b == 2 * s && s != 0) info = "треугольник прямоугольный";
                            }
                            else info = "треугольник не существует";
                        }
                        else info = "есть сторона с отрицательной длиной";
                    }
                    else info = "заданы не все стороны";
                    break;

                // case 2: и т.д. - место для добавления новых фигур

                default: info = "неизвестный тип фигуры"; break;
            }
            return s; // если -1 - ошибка. Усложнять обработку ошибок через исключения не будем.
        }
    }
}